#+title: Ajai's Doom Modules

* Description
This directory contains my custom Doom Emacs modules. Some are forked from Doom's existing official modules, and others were develeoped from scratch. Some are meant to replace Doom's modules, some extend the functionality of existing Doom modules, and some provide new functionality. See the module descriptions below for more details.

The modules vary greatly in their levels maturity and reliability. In the list below, I've tried to mark which ones are more and less reliable.
* Installation
Doom v3, which hasn't been released yet, will include a convenient way to install third-party modules like these ones. In the meantime, if you want to use my modules, you'll have to copy or symlink my modules into your modules directory:

1. Copy my modules (either the whole directory, or just the ones you want) into your modules directory:
   #+begin_src bash
   # Your Doom configuration is probably in one of these locations. Choose the correct one:
   DOOMDIR="$HOME/.doom.d"
   DOOMDIR="${XDG_CONFIG_HOME:-$HOME/.config}"/doom

   # Make sure you're in this directory (my modules/ directory).
   # Then you can symlink my entire modules directory to your modules directory:
   ln -s "$(realpath .)" "$DOOMDIR"/

   # OR, you can symlink individual modules:
   mkdir -p "$DOOMDIR"/modules/{app,completion,config,editor,emacs,input,lang,os,term,tools,ui}
   ln -s "$(realpath ./editor/words)" "$DOOMDIR"/modules/editor/
   ln -s "$(realpath ./completion/fuzzy)" "$DOOMDIR"/modules/completion/
   #+end_src

2. Most of my modules have an implicit dependency on my utilities library, [[https://github.com/AjaiKN/dotfiles/blob/main/config/doom/lisp/akn/akn.el][akn.el]].
   There are multiple ways to install it.

   The simplest one is probably to add the following to your ~$DOOMDIR/packages.el~:
   #+begin_src elisp
   (package! akn
     :recipe (:host github :repo "AjaiKN/dotfiles" :files ("config/doom/lisp/akn/*.el") :nonrecursive t))
   #+end_src

   Or if you have the [[https://github.com/AjaiKN/dotfiles/tree/main/config/doom/lisp/akn][akn directory]] on your machine, you can add the following instead:

    #+begin_src elisp
   (package! akn
     :recipe (:local-repo "/path/to/akn"))
   #+end_src

   Or you can download [[https://github.com/AjaiKN/dotfiles/blob/main/config/doom/lisp/akn/akn.el][akn.el]], then add the following line to your ~$DOOMDIR/init.el~:
   #+begin_src elisp
   (load! "/path/to/akn.el")
   #+end_src

3. Enable the modules you want in your ~$DOOMDIR/init.el~.

4. Sync Doom configuration:
   #+begin_src bash
   doom sync
   #+end_src

* Module Status Key

| *Symbol* | *Meaning*                                                        |
| ‚≠ê    | I use this module very regularly and it works relatively well  |
| üï∞    | I haven't used this in a while, so it might not work very well |
| üöß    | Half-baked, not very complete                                  |
| üêõ    | Known bugs or issues                                           |
| üè¢    | Large module with extensive functionality                      |
| üêÅ    | Tiny module that barely configures its packages                |

* Module list
** :app
*** [[./app/everywhere][everywhere]]: adds system-wide popup Emacs windows for quick edits
Similar to Doom's built-in ~:app everywhere~ module, except:
- I made some tweaks to make it work better on my machine
- adds support for [[https://github.com/alpha22jp/atomic-chrome][atomic-chrome]], which works better for me in the browser (including in Firefox, despite the name)
*** üï∞ [[./app/github-explorer][github-explorer]]: view GitHub repositories in Emacs without cloning them
*** üöß [[./app/omni][omni]]: support for [[https://github.com/armindarvish/consult-omni][consult-omni]]
*** üï∞ [[./app/transcribe][transcribe]]: utilities for making transcriptions synced with videos
*** üè¢üï∞ [[./app/xkcd][xkcd]]: view [[https://xkcd.com/][xkcd]] comics in Emacs
** :completion
*** ‚≠ê [[./completion/fuzzy][fuzzy]]: fuzzy completion using [[https://github.com/jojojames/fussy][fussy]]

To actually use this module, you'll need to add it to ~completion-styles~:
#+begin_src emacs-lisp
;; NOTE: don't remove the basic style, or else Tramp host name completion won't work!
;; Use fuzzy completion
(setq completion-styles '(fussy basic))
;; OR, use it as a backup if orderless returns nothing (this is my preference)
(setq completion-styles '(orderless fussy basic))
#+end_src

This module supports all the completion packages supported by [[https://github.com/jojojames/fussy][fussy]]:
- [[doom-module::completion fuzzy +flx][+flx]] (default)
- [[doom-module::completion fuzzy +flx-rs][+flx-rs]]
- [[doom-module::completion fuzzy +fzf-native][+fzf-native]]
- [[doom-module::completion fuzzy +fuz-bin][+fuz-bin]]
- [[doom-module::completion fuzzy +fuz][+fuz]]
- [[doom-module::completion fuzzy +liquidmetal][+liquidmetal]]
- [[doom-module::completion fuzzy +sublime-fuzzy][+sublime-fuzzy]]
- [[doom-module::completion fuzzy +hotfuzz][+hotfuzz]]
To /install/ all of these packages (e.g., to make it easier to try out the different packages), use [[doom-module::completion fuzzy +all][+all]]. (To choose which one will actually be /used/, add one of the flags above.)
*** ‚≠êüêÅ [[./completion/hippie][hippie]]: support for the built-in [[https://www.gnu.org/software/emacs/manual/html_node/autotype/Hippie-Expand.html][hippie-expand]]
*** üößüêÅ [[./completion/p-search][p-search]]: support for [[https://github.com/zkry/p-search][p-search]]
*** ‚≠ê [[./completion/preview][preview]]: support for the built-in [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Symbol-Completion.html][completion-preview-mode]]
** :config
*** ‚≠êüè¢ [[./config/akn-bindings][akn-bindings]]: my preferred keybindings (put this after Doom's [[doom-module::config default +bindings][:config default +bindings]])
Flags:
**** +leader-keys: set my preferred leader and localleader keys
**** +leader-bindings: use my preferred bindings under the leader keys
**** +evil-insert: use my preferred bindings in evil insert state
** :editor
*** ‚≠êüè¢ [[./editor/fold][fold]]: marries [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Hideshow.html][hideshow]], [[https://github.com/mrkkrp/vimish-fold][vimish-fold]], [[https://github.com/emacs-tree-sitter/ts-fold][ts-fold]], [[https://github.com/emacs-tree-sitter/treesit-fold][treesit-fold]], [[https://github.com/jdtsmith/comint-fold][comint-fold]], and [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Outline-Minor-Mode.html][outline-minor-mode]] (enhanced with [[https://github.com/jdtsmith/outli][outli]] and [[https://github.com/jamescherti/outline-indent.el][outline-indent]]) to bring you marker-, indent- and syntax-based code folding for as many languages as possible.
Similar to Doom's built-in ~:editor fold~ module, except:
- adds support for more packages with more kinds of folds
- for evil users, adds ~<tab>~ and ~S-<tab>~ bindings in normal state
*** üï∞ [[./editor/license-headers][license-headers]]: inserting licenses and license headers
*** üï∞ [[./editor/mindstream][mindstream]]: see [[https://github.com/countvajhula/mindstream][the mindstream package]]
*** ‚≠êüè¢ [[./editor/multiple-cursors][multiple-cursors]]:
Forked from Doom's ~:editor multiple-cursors~.
- I make an ambitious attempt to combine ~evil-mc~ with ~multiple-cursors~.
  I think ~multiple-cursors~ is generally better, except it doesn't work well with evil.
  So this module automatically switches to ~multiple-cursors~ when in insert/emacs state and ~evil-mc~ in all other evil states.
- Added some extra commands and keybindings (e.g., for making a cursor below, and for super-clicking somewhere to create a cursor there)
*** üï∞ [[./editor/smart-tabs][smart-tabs]]: see [[https://github.com/jcsalomon/smarttabs][the smart-tabs-mode package]] (tabs for indentation, spaces for alignment)
*** üï∞ [[./editor/symex][symex]]: the evilest way to lisp, and the modalest way to evil
*** üêÅ [[./editor/titlecase][titlecase]]: Switching a Sentence to Title Case
*** ‚≠ê [[./editor/typing-the-word-blimpy-in-doom-emacs][typing-the-word-blimpy-in-doom-emacs]]: limpy b
*** ‚≠ê [[./editor/words][words]]: toggling different ways of detecting word boundaries
** :emacs
*** üêÅ [[./emacs/bookmark-in-project][bookmark-in-project]]: project-local bookmarks
*** üï∞ [[./emacs/casual][casual]]: use [[https://github.com/kickingvegas/casual-suite][casual]]'s user-friendly [[https://github.com/magit/transient][transient]] menus, modified to be closer to Doom's default keybindings
*** ‚≠ê [[./emacs/electric-operator][electric-operator]]: automatically insert spaces around operators in many different programming languages (e.g., typing "3+3" produces "3 + 3")
*** üï∞ [[./emacs/elmacro][elmacro]]: convert keyboard macros into Emacs Lisp functions
*** ‚≠êüêÅ [[./emacs/keyfreq][keyfreq]]: measure how often you use different commands, to help you optimize your keybindings
*** üï∞üêÅ [[./emacs/perf-extras][perf-extras]]: some packages for measuring Emacs peformance
*** ‚≠ê [[./emacs/repeat][repeat]]: support for ~repeat-mode~
*** [[./emacs/secondary-selection][secondary-selection]]: make use of Emacs's obscure [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Secondary-Selection.html]["secondary selection" feature]]
*** ‚≠êüè¢ [[./emacs/vlf][vlf]]: view large files without loading the whole thing into memory
** :input
*** üï∞ [[./input/csi-u][csi-u]]: support for [[https://www.leonerd.org.uk/hacks/fixterms/][CSI u]], which is used by [[https://iterm2.com/documentation-csiu.html][iTerm2]] to send lots of extra keys that terminal emulators don't normally send

NOTE: On terminal emulators that support the [[https://sw.kovidgoyal.net/kitty/keyboard-protocol/][Kitty Keyboard Protocol (KKP)]], like Kitty and WezTerm, this module isn't needed, since Doom now supports KKP by default if ~:os tty~ is enabled.
*** [[./input/reverse-im][reverse-im]]: see [[https://github.com/a13/reverse-im.el][the reverse-im package]]
** :lang
*** üè¢ [[./lang/ess][ess]]: fork of doom's ess module (R and Julia)
*** üêÅ [[./lang/hare][hare]]: [[https://harelang.org/][Hare]]
*** [[./lang/jsonian][jsonian]]: like doom's json module, but uses [[https://github.com/iwahbe/jsonian][jsonian]]
*** üêÅ [[./lang/kdl][kdl]]: KDL (JSON/YAML/XML alternative, used for serialization and configuration)
*** [[./lang/linear-program][linear-program]]:
*** üêÅ [[./lang/log][log]]: dealing with log files
*** [[./lang/maxima][maxima]]: [[https://maxima.sourceforge.io/][Maxima]] (computer algebra system)
*** üêÅ [[./lang/mercury][mercury]]: [[https://mercurylang.org/][Mercury]] (logical + functional programming)
*** [[./lang/obsidian][obsidian]]: dealing with [[https://obsidian.md/][Obsidian]] markdown files
*** üêÅ [[./lang/pdf-raw][pdf-raw]]: editing raw PDF files for some reason
*** [[./lang/roc][roc]]: [[https://www.roc-lang.org/][Roc]] (a fast, friendly, functional language)
*** üêÅ [[./lang/sage][sage]]: [[https://www.sagemath.org/][SageMath]]
*** [[./lang/typst][typst]]: [[https://typst.app/][Typst]] (LaTeX alternative)
*** üêÅ [[./lang/uiua][uiua]]: [[https://www.uiua.org/][Uiua]] (stack-based array programming)
*** üêÅ [[./lang/vimrc][vimrc]]: editing vimrc files
** :os
*** üï∞ [[./os/emacs-mac][emacs-mac]]: stuff specific to [[https://bitbucket.org/mituharu/emacs-mac/][Mitsuharu Yamamoto's emacs-mac]] (a fork of Emacs for better Mac support, which can be installed [[https://github.com/railwaycat/homebrew-emacsmacport][with Homebrew]] or [[https://ports.macports.org/port/emacs-mac-app/][with MacPorts]])
*** ‚≠ê [[./os/emacs-plus][emacs-plus]]: stuff I use on Mac with [[github.com/d12frosted/homebrew-emacs-plus][emacs-plus]]
*** üöß [[./os/exwm][exwm]]: Emacs X Window Manager (for Linux)
** :term
*** üêõ [[./term/eat][eat]]: Emulate A Terminal with [[https://codeberg.org/akib/emacs-eat][eat]]
*** üêõüè¢ [[./term/mistty][mistty]]: a fancier frontend for term.el
I make some very invasive changes to mistty to make commands only act on the prompt
** :tools
*** üï∞üêÅ [[./tools/age][age]]: integration for [[https://github.com/FiloSottile/age][age]] file encryption
*** üêÅüöß [[./tools/dwim-shell-command][dwim-shell-command]]: support for [[https://github.com/xenodium/dwim-shell-command][dwim-shell-command]]
*** [[./tools/fasd][fasd]]: integration for [[https://github.com/clvv/fasd][fasd]] (directory and file navigation based on frecency)
*** üößüè¢ [[./tools/llm-extra][llm-extra]]: stuff related to large language models
Meant to be used in addition to Doom's ~:tools llm~ module.
*** ‚≠ê [[./tools/pdf][pdf]]: viewing PDFs in Emacs
Forked from Doom's ~:tools pdf~ module.
*** ‚≠ê [[./tools/prodigy][prodigy]]: managing external services (e.g. starting a development server that you use all the time)
Forked from Doom's deleted module of the same name
*** üêÅüöß [[./tools/quarto][quarto]]: scientific publishing with Quarto
*** [[./tools/regex][regex]]: tools for working with regular expressions - converting between Perl-style (PCRE) regex syntax, Emacs regex syntax, and Emacs [[https://www.gnu.org/software/emacs/manual/html_node/elisp/Regular-Expressions.html][rx]] syntax
*** üï∞ [[./tools/stgit][stgit]]: integration with [[https://stacked-git.github.io/][stacked git]].
*** [[./tools/upload][upload]]: fork of doom's ~:tools upload~ module
** :ui
*** ‚≠êüêÅ [[./ui/blamer][blamer]]: [[https://github.com/Artawower/blamer.el][blamer]] package (inline git blame for the current line)
*** ‚≠êüêÅ [[./ui/buffer-move][buffer-move]]: moving buffers between windows
*** üï∞ [[./ui/emacs-dashboard][emacs-dashboard]]: an alternative to Doom's [[doom-module::ui doom-dashboard][:ui doom-dashboard]] module
*** üêÅ [[./ui/extra-themes][extra-themes]]: some extra themes you can try or use
*** üï∞üêÅ [[./ui/golden-ratio][golden-ratio]]: auto-resize windows using the [[https://github.com/roman/golden-ratio.el][golden-ratio]] package, inspired by [[https://www.spacemacs.org/doc/DOCUMENTATION.html#golden-ratio][the Spacemacs integration]].
*** ‚≠êüêÅ [[./ui/highlight-numbers][highlight-numbers]]: highlight numbers in modes that don't highlight them
This is taken from Doom's source code from before it was removed in [[https://github.com/doomemacs/doomemacs/commit/5cb34fa15155c6525ceb33a715b6c1944410bad3][this commit]].
*** ‚≠ê [[./ui/highlight-symbol][highlight-symbol]]: highlight all instances of the symbol the cursor is on
*** ‚≠ê [[./ui/modeline-minor-modes][modeline-minor-modes]]: show a menu of minor modes in the modeline
*** ‚≠êüêÅ [[./ui/modeline-scrollbar][modeline-scrollbar]]: show a mini scrollbar in the modeline
*** ‚≠ê [[./ui/nav-flash][nav-flash]]: flash the line the cursor's on after big motions
Forked from Doom's ~nav-flash~ module, but uses the [[https://github.com/protesilaos/pulsar][pulsar]] package instead of the [[https://github.com/rolandwalker/nav-flash][nav-flash]] package.
*** üï∞ [[./ui/prism][prism]]: color code by the nesting level it's in, not by its syntactic role
*** ‚≠êüêÅ [[./ui/rainbow-delimiters][rainbow-delimiters]]: highlight delimiters with rainbow colors
This is taken from Doom's source code from before it was removed in [[https://github.com/doomemacs/doomemacs/commit/87b616e5d8dcb9763a8caf7b83e1e8e9016b6d1d][this commit]].
*** [[./ui/read-aloud][read-aloud]]: read text out loud (only macOS is supported)
*** ‚≠êüè¢ [[./ui/tab-bar][tab-bar]]: an alternative to Doom's [[doom-module::ui workspaces][:ui workspaces]] module using the Emacs built-in [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Bars.html][tab-bar-mode]]
- With the +bufferlo flag, this uses [[https://github.com/florommel/bufferlo][bufferlo]].
- Otherwise, this uses [[https://github.com/mclear-tools/tabspaces][tabspaces]].
*** ‚≠êüè¢ [[./ui/tabs][tabs]]: an alternative to Doom's [[doom-module::ui tabs][:ui tabs]] module using the Emacs built-in [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Tab-Line.html][tab-line-mode]]
* License

These modules are part of my larger dotfiles repository and are released under GPL-3.0+ unless otherwise specified in individual module directories.
