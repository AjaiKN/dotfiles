.\" DO NOT MODIFY THIS FILE!  It was generated by help2man 1.49.3.
.TH TRASH "1" "June 2025" "trash 0.1-pre" "User Commands"
.SH NAME
trash \- manual page for trash 0.1-pre
.SH SYNOPSIS
.B trash
[\fI\,OPTION\/\fR]... [\fI\,--\/\fR] \fI\,FILE\/\fR...
.SH DESCRIPTION
Put each FILE in the trash. Currently supports macOS and Linux.
.TP
\fB\-h\fR, \fB\-\-help\fR
Show this usage message.
.TP
\fB\-f\fR, \fB\-\-force\fR
Override read\-only files, and ignore nonexistent or otherwise untrashable files.
If any of the files are owned by the current user but don't have write
permissions, delete them anyway. If any of the files are nonexistent or owned
by someone else, ignore them and still trash everything else. (Otherwise, this
command will refuse to do anything if any of the arguments are untrashable.)
.TP
\fB\-n\fR, \fB\-\-dry\-run\fR
Don't actually trash anything; just print what this command *would* do.
This option implies \fB\-\-verbose\fR.
.TP
\fB\-v\fR, \fB\-\-verbose\fR
Be more verbose.
.TP
\fB\-s\fR, \fB\-\-strategy\fR=\fI\,STRATEGY\/\fR
Specify which trashing strategy to use. Can also be specified with the
TRASH_STRATEGY environment variable, which this option supersedes.
.TP
\fB\-d\fR, \fB\-\-dir\fR
Does nothing. For compatibility with rm.
.TP
\fB\-r\fR, \fB\-R\fR, \fB\-\-recursive\fR
Does nothing. For compatibility with rm.
.SH "AVAILABLE STRATEGIES"
.TP
freedesktop
(default on Linux) Use the freedesktop.org Trash Specification:
https://specifications.freedesktop.org/trash\-spec/1.0/
.TP
macos_trash_command
(default on macOS >=14.0) Use the built\-in macOS \fI\,/usr/bin/trash\/\fP command
.TP
macos_applescript
(default on macOS <14.0) Use AppleScript
.TP
macos_mv
Use mv to move to ~/.Trash/
.TP
gio
Use the 'gio trash' command
.TP
kioclient
Use the 'kioclient move FILE... trash:/' command
.TP
trash_cli
Use trash\-put from trash\-cli: https://github.com/andreafrancia/trash\-cli
.TP
dangerous_rm
Use rm
.TP
dangerous_shred
Use GNU shred
